#!/usr/bin/env python
# encoding: utf-8
"""
044 - Pentagonal Numbers.py

Created by Jason Sundram on 2009-12-05.

Problem 44
23 May 2003

Pentagonal numbers are generated by the formula, P_(n)=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_(4) + P_(7) = 22 + 70 = 92 = P_(8). However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_(j) and P_(k), for which their sum and difference is pentagonal 
and D = |P_(k) − P_(j)| is minimised; what is the value of D?

"""

from timed import timed

def perfect_root(n):
    r = int(n **.5)
    s = r*r
    return (s == n, r)

def is_pent(n):
    """By some simple algebra and the quadratic formula, can show that pentagonal numbers p need to satisfy:
        (1 + sqrt(1 + 24p)) / 6 is an integer.
    """
    (t, r) = perfect_root(1 + 24*n)
    return t and (r + 1) % 6 == 0
    
def pent(n):
    return n * (3 * n - 1) / 2

@timed
def original_solution():
    pents = set(map(pent, xrange(1, 10000)))
    for i in pents:
        for j in pents:
            if i < j:
                s = i + j
                d = j - i
                if s in pents and d in pents:
                    print "%d and %d are pentagonals with pentagonal sum %d and pentagonal difference %d" % (i, j, s, d)
                    return d
    return -1


def main():
    print 'The answer (original) is: %d' % original_solution()


if __name__ == '__main__':
	main()

